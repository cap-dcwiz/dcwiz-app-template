version: "3.8"

networks:
  default:
    name: dcwiz-app
    external: true

services:
  {% if cookiecutter.need_database == "y" -%}
  prepare-database:
    image: postgres:15
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_USER: ${POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
    volumes:
      - ./scripts:/opt/scripts
    command: /opt/scripts/create_postgres_database.sh ${POSTGRES_DB} ${POSTGRES_USER} ${POSTGRES_PASSWORD}
    profiles:
      - "app"

  {{ cookiecutter.__container_name }}-migrate:
    image: ghcr.io/cap-dcwiz/{{ cookiecutter.__image_name }}:${IMAGE_TAG}
    volumes:
      - ./config:/opt/config
    entrypoint: [ "alembic", "upgrade", "head" ]
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      prepare-database:
        condition: service_completed_successfully
    profiles:
      - "app"
  {%- endif %}

  {{ cookiecutter.__container_name }}:
    image: ghcr.io/cap-dcwiz/{{ cookiecutter.__image_name }}:${IMAGE_TAG}
    volumes:
      - ./config:/opt/config
    command:
      - "--root-path=/{{ cookiecutter.app_path }}"
      - "--config=/opt/config/config.prod.toml"
    environment:
      {{ cookiecutter.__project_config_prefix }}_AUTH__URL: ${AUTH_URL}
      {{ cookiecutter.__project_config_prefix }}_PLATFORM__BASE_URL: ${PLATFORM_BASE_URL}
      {{ cookiecutter.__project_config_prefix }}_PLATFORM__USERNAME: ${PLATFORM_USERNAME}
      {{ cookiecutter.__project_config_prefix }}_PLATFORM__PASSWORD: ${PLATFORM_PASSWORD}
      TZ: ${TZ}
    {% if cookiecutter.need_database == "y" -%}
    depends_on:
      prepare-database:
        condition: service_completed_successfully
      {{ cookiecutter.__container_name }}-migrate:
          condition: service_completed_successfully
    {%- endif %}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ cookiecutter.__container_name }}.rule=PathPrefix(`/{{ cookiecutter.app_path }}/`)"
      - "traefik.http.routers.{{ cookiecutter.__container_name }}.entrypoints=https"
      - "traefik.http.routers.{{ cookiecutter.__container_name }}.tls=true"
      - "traefik.http.services.{{ cookiecutter.__container_name }}.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.{{ cookiecutter.__container_name }}-strip.stripprefix.prefixes=/{{ cookiecutter.app_path }}"
      - "traefik.http.middlewares.{{ cookiecutter.__container_name }}-strip.stripprefix.forceSlash=false"
      - "traefik.http.middlewares.{{ cookiecutter.__container_name }}-add-header.headers.customrequestheaders.x-auth-resource={{ cookiecutter.__container_name }}"
      - "traefik.http.routers.{{ cookiecutter.__container_name }}.middlewares={{ cookiecutter.__container_name }}-strip, {{ cookiecutter.__container_name }}-add-header, authorize@file"
    profiles:
      - "app"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  {% if cookiecutter.need_database == "y" -%}
  clean-database:
    image: postgres:15
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_USER: ${POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
    volumes:
      - ./scripts:/opt/scripts
    command: /opt/scripts/drop_postgres_database.sh ${POSTGRES_DB} ${POSTGRES_USER}
    profiles:
      - "clean"
  {%- endif %}
